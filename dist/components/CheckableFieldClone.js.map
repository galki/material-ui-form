{"version":3,"sources":["../../src/components/CheckableFieldClone.js"],"names":["CheckableFieldClone","props","fieldComp","Checkbox","Switch","includes","type","Error","name","undefined","value","checked","field","onConstruct","state","React","cloneElement","onChange","onToggle","Component","PropTypes","object","isRequired","func","event","setState"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;IAGqBA,mB;;;;;AAYnB,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sIAAMA,KAAN;;AADiB;;AAAA,QAETC,SAFS,GAEKD,KAFL,CAETC,SAFS;;AAIjB,QAAI,CAAC,CAACC,iBAAD,EAAWC,eAAX,EAAmBC,QAAnB,CAA4BH,UAAUI,IAAtC,CAAL,EAAkD;AAChD,YAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,QAAIL,UAAUI,IAAV,CAAeE,IAAf,KAAwBC,SAA5B,EAAuC;AACrC,YAAM,IAAIF,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,QAAIL,UAAUD,KAAV,CAAgBO,IAAhB,KAAyBC,SAAzB,IAAsCP,UAAUD,KAAV,CAAgBS,KAAhB,KAA0BD,SAApE,EAA+E;AAC7E,YAAM,IAAIF,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,QAAII,UAAUV,MAAMW,KAAN,CAAYF,KAA1B;;AACA,QAAIT,MAAMW,KAAN,CAAYF,KAAZ,KAAsBD,SAA1B,EAAqC;AACnCE,gBAAUT,UAAUD,KAAV,CAAgBU,OAAhB,IAA2B,KAArC;;AACA,YAAKV,KAAL,CAAWY,WAAX,CAAuBX,UAAUD,KAAjC;AACD;;AACD,UAAKa,KAAL,GAAa;AAAEH;AAAF,KAAb;AAnBiB;AAoBlB;;;;6BAWQ;AAAA,UACCT,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAEP,aAAOa,eAAMC,YAAN,CAAmBd,SAAnB,EAA8B;AACnCQ,eAAOR,UAAUD,KAAV,CAAgBS,KADY;AAEnCC,iBAAS,KAAKG,KAAL,CAAWH,OAFe;AAGnCM,kBAAU,KAAKC;AAHoB,OAA9B,CAAP;AAKD;;;;EAlD8CH,eAAMI,S;;;sBAAlCnB,mB;;;;SACA;AACjBY,WAAOQ,mBAAUC,MADA;AAEjBnB,eAAWkB,mBAAUC,MAAV,CAAiBC,UAFX;AAGjBJ,cAAUE,mBAAUG,IAAV,CAAeD,UAHR;AAIjBT,iBAAaO,mBAAUG,IAAV,CAAeD;AAJX;;sBADAtB,mB;;;;SAQG;AACpBY,WAAO;AADa;;;;;;;;;;WA0BX,eAACY,KAAD,EAAQb,OAAR,EAAoB;AAAA,yBACgC,OAAKV,KADrC;AAAA,UACrBC,SADqB,gBACrBA,SADqB;AAAA,+CACVA,SADU,CACGD,KADH;AAAA,UACYO,IADZ,yBACYA,IADZ;AAAA,UACkBE,KADlB,yBACkBA,KADlB;;AAE7B,aAAKe,QAAL,CAAc;AAAEd;AAAF,OAAd;;AACA,aAAKV,KAAL,CAAWiB,QAAX,CAAoBV,IAApB,EAA0BE,KAA1B,EAAiCC,OAAjC;;AACA,UAAIT,UAAUD,KAAV,CAAgBgB,QAAhB,KAA6BR,SAAjC,EAA4C;AAC1CP,kBAAUD,KAAV,CAAgBgB,QAAhB,CAAyBN,OAAzB,EAAkC;AAAEH,oBAAF;AAAQE;AAAR,SAAlC,EAAmDc,KAAnD;AACD;AACF","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash' // eslint-disable-line import/no-extraneous-dependencies\n\nimport Checkbox from 'material-ui/Checkbox'\nimport Switch from 'material-ui/Switch'\n\n\nexport default class CheckableFieldClone extends React.Component {\n  static propTypes = {\n    field: PropTypes.object,\n    fieldComp: PropTypes.object.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    onConstruct: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    field: {},\n  }\n\n  constructor(props) {\n    super(props)\n    const { fieldComp } = props\n\n    if (![Checkbox, Switch].includes(fieldComp.type)) {\n      throw new Error('CheckableFieldClone should be a Checkbox or Switch')\n    }\n    if (fieldComp.type.name === undefined) {\n      throw new Error('CheckableFieldClone does not support native elements')\n    }\n    if (fieldComp.props.name === undefined || fieldComp.props.value === undefined) {\n      throw new Error('CheckableFieldClone name and value must be defined')\n    }\n\n    let checked = props.field.value\n    if (props.field.value === undefined) {\n      checked = fieldComp.props.checked || false\n      this.props.onConstruct(fieldComp.props)\n    }\n    this.state = { checked }\n  }\n\n  onToggle = (event, checked) => {\n    const { fieldComp, fieldComp: { props: { name, value } } } = this.props\n    this.setState({ checked })\n    this.props.onToggle(name, value, checked)\n    if (fieldComp.props.onChange !== undefined) {\n      fieldComp.props.onChange(checked, { name, value }, event)\n    }\n  }\n\n  render() {\n    const { fieldComp } = this.props\n    return React.cloneElement(fieldComp, {\n      value: fieldComp.props.value,\n      checked: this.state.checked,\n      onChange: this.onToggle,\n    })\n  }\n}\n"],"file":"CheckableFieldClone.js"}