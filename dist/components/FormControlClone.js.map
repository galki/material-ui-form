{"version":3,"sources":["../../src/components/FormControlClone.js"],"names":["getErrorAndHelperText","field","helperText","isError","_","isEmpty","validations","length","message","FormControlClone","props","formControlElement","error","required","name","value","React","Children","forEach","children","child","type","FormHelperText","String","FormLabel","InputLabel","undefined","FormControl","Error","onConstruct","fieldError","state","nextProps","setState","hasHelperText","map","cloneElement","onChange","push","Component","PropTypes","object","isRequired","onValueChange","func","event","target"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash' // eslint-disable-line import/no-extraneous-dependencies\n\nimport { FormControl, FormHelperText, FormLabel } from 'material-ui/Form'\nimport { InputLabel } from 'material-ui/Input'\n\n\nfunction getErrorAndHelperText(field) {\n  let helperText\n  let isError = false\n  if (!_.isEmpty(field) && field.validations.length > 0) {\n    helperText = field.validations[0].message\n    isError = true\n  }\n  return { helperText, isError }\n}\n\nexport default class FormControlClone extends React.Component {\n  static propTypes = {\n    field: PropTypes.object,\n    formControlElement: PropTypes.object.isRequired,\n    onValueChange: PropTypes.func.isRequired,\n    onConstruct: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    field: {},\n  }\n\n  constructor(props) {\n    super(props)\n\n    const { error, required } = props.formControlElement.props\n\n    let name\n    let value\n    let helperText\n    let isError = error\n\n    React.Children.forEach(props.formControlElement.props.children, (child) => {\n      if (child.type === FormHelperText) {\n        helperText = String(child.props.children)\n        this.helperText = helperText\n      } else if (child.type !== FormLabel\n        && child.type !== InputLabel\n        && child.props.name !== undefined\n        && child.props.value !== undefined\n      ) {\n        name = child.props.name // eslint-disable-line prefer-destructuring\n        value = child.props.value // eslint-disable-line prefer-destructuring\n      }\n    })\n\n    if (props.formControlElement.type !== FormControl\n      || name === undefined\n      || value === undefined\n    ) {\n      throw new Error('invalid FormControl control children')\n    }\n\n    if (props.field.value === undefined) {\n      props.onConstruct({ name, value, required })\n    } else {\n      value = props.field.value // eslint-disable-line prefer-destructuring\n      if (!_.isEmpty(props.field) && props.field.validations.length > 0) {\n        const fieldError = getErrorAndHelperText(props.field)\n        helperText = fieldError.helperText // eslint-disable-line prefer-destructuring\n        isError = fieldError.isError // eslint-disable-line prefer-destructuring\n      }\n    }\n\n    this.name = name\n    this.state = {\n      helperText,\n      isError,\n      value,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEmpty(nextProps.field)) {\n      const { helperText, isError } = getErrorAndHelperText(nextProps.field)\n      this.setState({\n        helperText,\n        isError,\n        value: nextProps.field.value,\n      })\n    }\n  }\n\n  onChange = (event) => {\n    const { value } = event.target\n    this.setState({ isError: false, helperText: this.helperText, value })\n    this.props.onValueChange(this.name, value)\n  }\n\n  render() {\n    const { formControlElement, formControlElement: { props } } = this.props\n\n    let hasHelperText = false\n    const children = React.Children.map(props.children, (child) => {\n      // label\n      if (child.type === FormLabel || child.type === InputLabel) {\n        return child\n      }\n      // helper text\n      if (child.type === FormHelperText) {\n        hasHelperText = true\n        return React.cloneElement(child, {\n          children: this.state.helperText,\n        })\n      }\n      // field\n      return React.cloneElement(child, {\n        onChange: child.props.onChange || this.onChange,\n        value: this.state.value,\n      })\n    })\n    // support for dynamic helper text\n    if (!hasHelperText && this.state.helperText !== undefined) {\n      children.push(<FormHelperText key={1}>{this.state.helperText}</FormHelperText>)\n    }\n\n    return (\n      React.cloneElement(formControlElement, {\n        error: this.state.isError,\n        children,\n      })\n    )\n  }\n}\n"],"file":"FormControlClone.js"}