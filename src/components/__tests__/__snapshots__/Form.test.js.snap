// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Form /> should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    autoComplete="off"
    disableSubmitButtonOnError={true}
    onSubmit={[MockFunction]}
    onValuesChange={null}
    validation={Object {}}
    validations={Object {}}
  >
    <TextField
      data-validators="isRequired,isAlpha"
      label="Name"
      name="name"
      required={false}
      select={false}
      type="text"
      value="mufasa"
    />
    <WithStyles(Button)
      type="submit"
      variant="raised"
    >
      Submit
    </WithStyles(Button)>
  </Form>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "autoComplete": "off",
      "children": Array [
        <FieldClone
          field={Object {}}
          onConstruct={[Function]}
          onToggle={[Function]}
          onValueChange={[Function]}
          useNativeRequiredValidator={false}
        >
          <TextField
            data-validators="isRequired,isAlpha"
            label="Name"
            name="name"
            required={false}
            select={false}
            type="text"
            value="mufasa"
          />
        </FieldClone>,
        <WithStyles(Button)
          disabled={false}
          type="submit"
          variant="raised"
        >
          Submit
        </WithStyles(Button)>,
      ],
      "onReset": [Function],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "name/.0",
        "nodeType": "class",
        "props": Object {
          "children": <TextField
            data-validators="isRequired,isAlpha"
            label="Name"
            name="name"
            required={false}
            select={false}
            type="text"
            value="mufasa"
          />,
          "field": Object {},
          "onConstruct": [Function],
          "onToggle": [Function],
          "onValueChange": [Function],
          "useNativeRequiredValidator": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data-validators": "isRequired,isAlpha",
            "label": "Name",
            "name": "name",
            "required": false,
            "select": false,
            "type": "text",
            "value": "mufasa",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "class",
        "props": Object {
          "children": "Submit",
          "disabled": false,
          "type": "submit",
          "variant": "raised",
        },
        "ref": null,
        "rendered": "Submit",
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "autoComplete": "off",
        "children": Array [
          <FieldClone
            field={Object {}}
            onConstruct={[Function]}
            onToggle={[Function]}
            onValueChange={[Function]}
            useNativeRequiredValidator={false}
          >
            <TextField
              data-validators="isRequired,isAlpha"
              label="Name"
              name="name"
              required={false}
              select={false}
              type="text"
              value="mufasa"
            />
          </FieldClone>,
          <WithStyles(Button)
            disabled={false}
            type="submit"
            variant="raised"
          >
            Submit
          </WithStyles(Button)>,
        ],
        "onReset": [Function],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "name/.0",
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              data-validators="isRequired,isAlpha"
              label="Name"
              name="name"
              required={false}
              select={false}
              type="text"
              value="mufasa"
            />,
            "field": Object {},
            "onConstruct": [Function],
            "onToggle": [Function],
            "onValueChange": [Function],
            "useNativeRequiredValidator": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data-validators": "isRequired,isAlpha",
              "label": "Name",
              "name": "name",
              "required": false,
              "select": false,
              "type": "text",
              "value": "mufasa",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "class",
          "props": Object {
            "children": "Submit",
            "disabled": false,
            "type": "submit",
            "variant": "raised",
          },
          "ref": null,
          "rendered": "Submit",
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
